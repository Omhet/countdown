{"version":3,"sources":["App.css","components/basic/CardWrapper.css","helpers/apiUrls.js","components/basic/Base.css","components/basic/TotalScore.js","constants/actionTypes.js","actions/index.js","constants/maxTimes.js","components/basic/Menu.js","components/basic/Rate.js","constants/common.js","components/basic/CardHeader.js","components/basic/Timer.js","components/basic/CancelButton.js","components/basic/DoneButton.js","components/basic/Cell.js","components/basic/CellGroup.js","components/cards/card-elements/CardInput.js","components/cards/WordCard.js","components/basic/Warning.js","components/cards/card-elements/ButtonGroup.js","components/cards/NumberCard.js","components/cards/GameOverCard.js","components/basic/CardWrapper.js","components/basic/Game.js","App.js","reducers/index.js","reducers/level.js","reducers/currentCard.js","reducers/score.js","reducers/time.js","reducers/warning.js","store.js","index.js","helpers/helpers.js","constants/cardNames.js","constants/numbers.js","components/basic/Menu.css","components/cards/Card.css","constants/letters.js","constants/signs.js","components/cards/card-elements/CardInput.css","components/basic/Cell.css"],"names":["module","exports","App","cardwrapper","__webpack_require__","d","__webpack_exports__","getYandexDicUrl","word","flex","nomargin","borderBottom","borderTop","responsiveFont","TotalScore","state","currentScore","cashedTotalScore","JSON","parse","localStorage","getItem","this","props","score","setItem","toString","setState","react_default","a","createElement","Component","connect","LEVEL_UP","DROP_LEVEL","SET_CARD_VALUE","CLEAR_CARD_VALUE","SET_CARD_NAME","START_LEVEL","STOP_LEVEL","UPDATE_SCORE","DROP_SCORE","SET_MAX_TIME","SET_WARNING","SET_TARGET","levelUp","type","setCardValue","value","clearCardValue","startLevel","stopLevel","updateScore","setWarning","warning","EASY_TIME","NORMAL_TIME","HARD_TIME","Menu","easyClick","_this","setMaxTime","normalClick","hardClick","className","style","menu","controls","Link","to","Icon","name","size","Button","Group","buttonEasy","button","onClick","buttonNormal","buttonHard","basic_TotalScore","dispatch","time","Rate","Header","FINAL_LEVEL","CardHeader","getDescription","level","number","cardNames","description","currentCard","Timer","timer","currentTime","maxTime","nextLevel","_callee","_this$props$currentCa","regenerator_default","wrap","_context","prev","next","calculateScore","sent","setTimeout","t0","alert","stop","tick","levelStarted","setInterval","clearInterval","color","BaseStyle","started","CancelButton","cancelClick","dropLevel","dropScore","animated","Content","visible","hidden","DoneButton","loading","doneButtonClick","card","console","log","isGameOver","disabled","Cell","handleClick","cellClick","index","opacity","backgroundColor","EMPTY_FILL","CellGroup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","lastValue","inputLastValue","contains","numbers","newGivenValues","toConsumableArray","givenValues","emptyValues","Array","maxLength","fill","nextProps","returnedValue","join","replace","split","values","_this2","_this$state","_this$props","sliceOfEmptyValues","slice","length","cells","concat","map","i","components_basic_Cell","key","getCellState","CardInput","cardInput","backspaceClick","backspace","MAX_LETTERS_LENGTH","WordCard","letters","currentValue","setLetterToState","letter","Math","floor","random","startLevelIfHaveAllLetters","getVowel","getConsonant","popInputValue","pop","basic_CellGroup","cards_card_elements_CardInput","fontSize","padding","Warning","message","objectSpread","ButtonWithValue","_ref","buttonClick","ButtonGroup","buttons","b","ButtonGroup_ButtonWithValue","MAX_NUMBERS_LENGTH","NumberCard","target","calculateTargetNumberValue","setCardTarget","getSmall","getBig","signs","s","card_elements_ButtonGroup","GameOverCard","gameOverCard","bigheader","smallheader","mapCardNamesToComponents","cards_WordCard","cards_NumberCard","CardWrapper","resolveCard","cards_GameOverCard","cardName","setCardName","baseStyle","basic_Rate","basic_CardHeader","basic_Timer","basic_Warning","basic_CancelButton","basic_DoneButton","actionCreators","Game","components_basic_CardWrapper","combineReducers","arguments","undefined","action","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","basic_Game","document","getElementById","POSITIVE","NEGATIVE","request","_Users_vlivanov_My_Projects_JS_Countdown_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_vlivanov_My_Projects_JS_Countdown_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","url","response","json","fetch","abrupt","_x","apply","arr","val","indexOf","_ref3","_callee2","_ref2","_context2","WORD_CARD","NUMBER_CARD","calculateScoreForWord","calculateScoreForNumber","_x2","expr","userValue","eval","diff","abs","_ref4","_callee3","dicUrl","res","_context3","def","_x3","getRandomElementFromArray","isValidTargetNumber","n","sign","big","small","all","vowels","consonants","cell","cellCover"],"mappings":"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","file":"static/js/main.6bad42d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_1o-FpbQrR11SDFN-G7O4U3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardwrapper\":\"_26nFhesm2IQk22bG-YXGb1\"};","export const getYandexDicUrl = word => {\n    return 'https://dictionary.yandex.net/' +\n    'api/v1/dicservice.json/' +\n    'lookup?key=dict.1.1.20181017T054446Z.8828bf2afad54623.4a6026cd581541a63e2fe5172389bf0da8ffab88&' +\n    'lang=ru-ru&' +\n    'text=' + word;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"PUafWHsfzIStJRj8xpx6H\",\"nomargin\":\"_4x4peJwBRGhlMqoJSmZek\",\"borderBottom\":\"_1-uDMLSrQVlWDSKenWM9Au\",\"borderTop\":\"_3C0Ed6PKPaSHBdPqj69dwi\",\"responsiveFont\":\"D4JuHztIhvsLlzmXLRQDA\"};","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n    return { score: state.score };\n}\n\nclass TotalScore extends Component {\n    state = {\n        currentScore: 0\n    }\n\n    componentDidMount() {\n        const cashedTotalScore = JSON.parse(localStorage.getItem('totalScore'));\n        \n        if (cashedTotalScore !== null) {\n            if (this.props.score > cashedTotalScore) {\n                localStorage.setItem('totalScore', this.props.score.toString());\n                this.setState({\n                    currentScore: this.props.score\n                });\n            } else {\n                this.setState({\n                    currentScore: cashedTotalScore\n                });\n            }\n        } else {\n            localStorage.setItem('totalScore', '0')\n        }\n    }\n\n    render() {\n        return (\n            <span>{this.state.currentScore}</span>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(TotalScore);\n","export const LEVEL_UP = \"LEVEL_UP\";\nexport const DROP_LEVEL = \"DROP_LEVEL\";\nexport const SET_CARD_VALUE = \"SET_CARD_VALUE\";\nexport const CLEAR_CARD_VALUE = \"CLEAR_CARD_VALUE\";\nexport const SET_CARD_NAME = \"SET_CARD_NAME\";\nexport const START_LEVEL = \"START_LEVEL\";\nexport const STOP_LEVEL = \"STOP_LEVEL\";\nexport const UPDATE_SCORE = \"UPDATE_SCORE\";\nexport const DROP_SCORE = \"DROP_SCORE\";\nexport const SET_MAX_TIME = \"SET_MAX_TIME\";\nexport const SET_WARNING = \"SET_WARNING\";\nexport const SET_TARGET = \"SET_TARGET\";\n\n\n\n\n\n","import {\n    LEVEL_UP,\n    SET_CARD_VALUE,\n    SET_CARD_NAME,\n    START_LEVEL,\n    UPDATE_SCORE,\n    STOP_LEVEL,\n    SET_MAX_TIME, DROP_LEVEL, DROP_SCORE, CLEAR_CARD_VALUE,\n    SET_TARGET,\n    SET_WARNING\n} from \"../constants/actionTypes\";\n\nexport const levelUp = () => ({ type: LEVEL_UP });\n\nexport const setCardValue = value => ({ type: SET_CARD_VALUE, value: value });\n\nexport const clearCardValue = () => ({ type: CLEAR_CARD_VALUE });\n\nexport const setCardName = name => ({ type: SET_CARD_NAME, name: name });\n\nexport const startLevel = () => ({ type: START_LEVEL });\n\nexport const stopLevel = () => ({ type: STOP_LEVEL });\n\nexport const updateScore = score => ({ type: UPDATE_SCORE, score: score });\n\nexport const setMaxTime = time => ({ type: SET_MAX_TIME, time: time });\n\nexport const dropLevel = () => ({ type: DROP_LEVEL });\n\nexport const dropScore = () => ({ type: DROP_SCORE });\n\nexport const setCardTarget = target => ({ type: SET_TARGET, target: target });\n\nexport const setWarning = warning => ({ type: SET_WARNING, warning: warning });\n\n\n\n\n\n","export const EASY_TIME = -1;\nexport const NORMAL_TIME = 60;\nexport const HARD_TIME = 30;","import React, { Component } from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n\nimport style from './Menu.css';\nimport TotalScore from './TotalScore';\nimport { setMaxTime } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { EASY_TIME, HARD_TIME, NORMAL_TIME } from \"../../constants/maxTimes\";\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMaxTime: time => dispatch(setMaxTime(time))\n    }\n};\n\nclass Menu extends Component {\n    easyClick = () => {\n        this.props.setMaxTime(EASY_TIME);\n    };\n\n    normalClick = () => {\n        this.props.setMaxTime(NORMAL_TIME);\n    };\n\n    hardClick = () => {\n        this.props.setMaxTime(HARD_TIME);\n    };\n\n    render() {\n        return (\n            <div className={style.menu}>\n                <h1>Обратный Отсчет</h1>\n                <div className={style.controls}>\n                    <Link to='/game'><Icon name='play circle' size='massive'/></Link>\n                    <Button.Group>\n                        <Button className={[style.buttonEasy, style.button]} onClick={this.easyClick}>Легко</Button>\n                        <Button className={[style.buttonNormal, style.button]}\n                                onClick={this.normalClick}>Нормально</Button>\n                        <Button className={[style.buttonHard, style.button]} onClick={this.hardClick}>Сложно</Button>\n                    </Button.Group>\n                </div>\n                <div>\n                    <span>Ваш рекорд:</span>\n                    <TotalScore/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Menu);\n","import React, { Component } from 'react';\nimport {Header} from \"semantic-ui-react\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return { score: state.score };\n};\n\nclass Rate extends Component {\n    render() {\n        return (\n            <div>\n                <Header size='medium'>{this.props.score}</Header>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(Rate);\n","export const FINAL_LEVEL = 10;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport {Header} from \"semantic-ui-react\";\nimport * as cardNames from '../../constants/cardNames'\nimport { FINAL_LEVEL } from \"../../constants/common\";\n\nconst mapStateToProps = state => {\n  return { name: state.currentCard.name, level: state.level };\n};\n\nclass CardHeader extends Component {\n    getDescription = () => {\n        if (this.props.level.number >= FINAL_LEVEL) return 'Всё!';\n\n        switch (this.props.name) {\n            case cardNames.WORD_CARD:\n                return 'Найди слово';\n            case cardNames.NUMBER_CARD:\n                return 'Найди число';\n            default:\n                return '';\n        }\n    }\n    render() {\n        const description = this.getDescription();\n\n        return (\n            <div>\n                <Header size='large'>{description}</Header>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, null)(CardHeader);\n","import React, { Component } from 'react';\nimport { Header, Icon } from \"semantic-ui-react\";\n\nimport BaseStyle from './Base.css';\nimport { connect } from \"react-redux\";\nimport { calculateScore } from \"../../helpers/helpers\";\nimport { levelUp, stopLevel, updateScore, clearCardValue, setWarning } from \"../../actions\";\n\nconst mapStateToProps = state => {\n    return {\n        maxTime: state.maxTime,\n        levelStarted: state.level.started,\n        currentCard: state.currentCard\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        levelUp: () => dispatch(levelUp()),\n        stopLevel: () => dispatch(stopLevel()),\n        updateScore: score => dispatch(updateScore(score)),\n        clearCardValue: () => dispatch(clearCardValue()),\n        setWarning: warning => dispatch(setWarning(warning))\n    };\n};\n\n\nclass Timer extends Component {\n    state = {\n        timer: null,\n        currentTime: this.props.maxTime\n    };\n\n    componentDidMount() {\n        let timer = setInterval(this.tick, 1000);\n        this.setState({ timer });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.timer);\n    }\n\n    nextLevel = async () => {\n        const { value, name } = this.props.currentCard;\n\n        try {\n            const score = await calculateScore(name, value);\n\n            this.props.setWarning(score.warning);\n            this.props.updateScore(score.value);\n            setTimeout(() => this.props.setWarning(''), 1000)\n            this.props.clearCardValue();\n            this.props.stopLevel();\n            this.props.levelUp();\n        } catch(e) {\n            alert('Check you internet connection');\n        }\n    };\n\n    tick = () => {\n        if (this.props.maxTime < 0) return false;\n\n        if (this.state.currentTime === 0) {\n            this.setState({\n                currentTime: this.props.maxTime\n            }, () => this.nextLevel());\n        }\n\n        if (!this.props.levelStarted) {\n            this.setState({\n                currentTime: this.props.maxTime\n            });\n        } else {\n            this.setState({\n                currentTime: this.state.currentTime - 1\n            });\n        }\n    }\n\n    render() {\n        const time = (this.props.maxTime < 0) ? '∞' : this.state.currentTime;\n        const color = (this.state.currentTime <= 5) ? 'red' : '';\n\n        return (\n            <div className={BaseStyle.flex}>\n                <Icon name='time'/>\n                <Header className={BaseStyle.nomargin} size='medium'>\n                    <span style={{color}}>{time}</span>\n                </Header>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n","import React, {Component} from 'react';\nimport {Button, Icon} from \"semantic-ui-react\";\nimport BaseStyle from \"./Base.css\";\nimport { Link } from \"react-router-dom\";\nimport { dropLevel, dropScore, stopLevel } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      dropLevel: () => dispatch(dropLevel()),\n      stopLevel: () => dispatch(stopLevel()),\n      dropScore: () => dispatch(dropScore())\n  }\n};\n\nclass CancelButton extends Component {\n    cancelClick = () => {\n        this.props.stopLevel();\n        this.props.dropLevel();\n        this.props.dropScore();\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to='/'>\n                    <Button onClick={this.cancelClick} animated color='red' size='massive' className={BaseStyle.responsiveFont}>\n                        <Button.Content visible>Ухожу</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name='arrow left'/>\n                        </Button.Content>\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CancelButton);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { Button, Icon } from \"semantic-ui-react\";\nimport BaseStyle from \"./Base.css\";\n\nimport { levelUp } from '../../actions/index';\nimport { calculateScore } from \"../../helpers/helpers\";\nimport { clearCardValue, stopLevel, updateScore, setWarning } from \"../../actions\";\nimport { FINAL_LEVEL } from \"../../constants/common\";\n\nconst mapStateToProps = state => {\n    return {\n        currentCard: state.currentCard,\n        score: state.score,\n        level: state.level\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        levelUp: () => dispatch(levelUp()),\n        stopLevel: () => dispatch(stopLevel()),\n        updateScore: score => dispatch(updateScore(score)),\n        clearCardValue: () => dispatch(clearCardValue()),\n        setWarning: warning => dispatch(setWarning(warning))\n    };\n};\n\nclass DoneButton extends Component {\n    state = {\n        loading: false\n    }\n\n    doneButtonClick = async () => {\n        const card = this.props.currentCard;\n\n        try {\n            await this.setState({ loading: true });\n\n            const score = await calculateScore(card);\n\n            await this.setState({ loading: false });\n\n            this.props.setWarning(score.warning);\n            this.props.updateScore(score.value);\n            setTimeout(() => this.props.setWarning(''), 2000)\n            this.props.clearCardValue();\n            this.props.stopLevel();\n            this.props.levelUp();\n        } catch(e) {\n            console.log(e)\n            alert('Check you internet connection');\n            await this.setState({ loading: false });\n        }\n    };\n\n    isGameOver = () => {\n        return this.props.level.number >= FINAL_LEVEL;\n    };\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.doneButtonClick} className={[BaseStyle.responsiveFont, BaseStyle.nomargin]}\n                    animated\n                    disabled={this.isGameOver() || this.state.loading}\n                    loading={this.state.loading}\n                    color='green'\n                    size='massive'>\n                    <Button.Content visible>Готово</Button.Content>\n                    <Button.Content hidden>\n                        <Icon name='arrow right' />\n                    </Button.Content>\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoneButton);\n","import React, { Component } from 'react';\nimport * as style from './Cell.css';\n\nconst getColor = state => {\n    if (state === 'positive') {\n        return 'palegreen';\n    } else if (state === 'negative') {\n        return 'salmon';\n    } else {\n        return 'whitesmoke'\n    }\n};\n\nconst getOpacity = hidden => {\n  return (hidden) ? '1' : '0.5';\n};\n\nclass Cell extends Component {\n    handleClick = () => {\n        this.props.cellClick(this.props.index, this.props.value);\n    };\n\n    render() {\n        const color = getColor(this.props.state);\n        const opacity = getOpacity(this.props.hidden);\n\n        return (\n            <div className={[style.cell]} onClick={this.handleClick}>\n                {this.props.value}\n                <div className={style.cellCover} style={{ backgroundColor: color, opacity}}></div>\n            </div>\n        );\n    }\n}\n\nexport default Cell;\n","import React, { Component } from 'react';\n\nimport Cell from './Cell';\nimport * as style from './Base.css';\nimport { getCellState, contains } from \"../../helpers/helpers\";\nimport { connect } from \"react-redux\";\nimport * as numbers from \"../../constants/numbers\";\n\nconst EMPTY_FILL = ' ';\n\n\nconst mapStateToProps = state => {\n    return { level: state.level };\n};\n\n\nclass CellGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        const emptyValues = Array(props.maxLength).fill(EMPTY_FILL);\n\n        this.state = {\n            emptyValues,\n            givenValues: []\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.returnedValue !== this.props.returnedValue) {\n            const returnedValue = nextProps.returnedValue;\n            if (returnedValue) {\n                let givenValues = [...this.state.givenValues];\n\n                givenValues = givenValues.join(',').replace(EMPTY_FILL, returnedValue).split(',');\n\n                this.setState({\n                    givenValues\n                });\n            }\n        }\n        if (nextProps.values !== this.props.values) {\n            this.setState({\n                givenValues: nextProps.values\n            });\n        }\n    }\n\n    cellClick = (index, value) => {\n        if (this.props.level.started) {\n            const lastValue = this.props.inputLastValue;\n            if (lastValue && contains(numbers.all, lastValue) && contains(numbers.all, value)) return false;\n\n            const newGivenValues = [...this.state.givenValues];\n            newGivenValues[index] = EMPTY_FILL;\n            this.setState({\n                givenValues: newGivenValues\n            });\n\n            this.props.cellClick(value);\n        }\n    };\n\n    render() {\n        const { emptyValues, givenValues } = this.state;\n        const { values, maxLength } = this.props;\n\n        const sliceOfEmptyValues = emptyValues.slice(values.length);\n        const updatedValues = givenValues.concat(sliceOfEmptyValues);\n\n        const limitedUpdatedValues = updatedValues.slice(0, maxLength);\n\n        const cells = limitedUpdatedValues.map((value, i) => {\n            return <Cell\n                index={i}\n                key={i}\n                hidden={!this.props.level.started}\n                state={getCellState(value)}\n                value={value}\n                cellClick={this.cellClick} />;\n        });\n\n        return (\n            <div className={style.flex}>\n                {cells}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(CellGroup);\n","import React, {Component} from 'react';\nimport style from './CardInput.css';\nimport {Icon} from \"semantic-ui-react\";\n\n\nclass CardInput extends Component {\n\n\n    render() {\n        return (\n            <div className={style.cardInput}>\n                <span className={style.value}>\n                    {this.props.value}\n                </span>\n                <Icon\n                    onClick={this.props.backspaceClick}\n                    className={style.backspace}\n                    name='long arrow alternate left'\n                    size='large'\n                    />\n            </div>\n        );\n    }\n}\n\nexport default CardInput;\n","import React, {Component} from 'react';\nimport {Button} from \"semantic-ui-react\";\nimport * as style from './Card.css';\nimport CellGroup from '../basic/CellGroup'\n\nimport * as letters from '../../constants/letters'\nimport {setCardValue, startLevel} from \"../../actions\";\nimport {connect} from \"react-redux\";\nimport CardInput from \"./card-elements/CardInput\";\nimport BaseStyle from \"../../components/basic/Base.css\";\n\n\nconst MAX_LETTERS_LENGTH = 9;\n\nconst mapStateToProps = state => {\n    return {level: state.level, currentCard: state.currentCard};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        startLevel: () => dispatch(startLevel()),\n        setCardValue: value => dispatch(setCardValue(value))\n    };\n};\n\nclass WordCard extends Component {\n    state = {\n        letters: [],\n        currentValue: '',\n        returnedValue: ''\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.level.number !== this.props.level.number) {\n            this.setState({\n                letters: [],\n                currentValue: '',\n                returnedValue: ''\n            })\n        }\n    }\n\n    setLetterToState = letters => {\n        const randInd = Math.floor(Math.random() * letters.length);\n        const letter = letters[randInd];\n        this.setState({\n            letters: [...this.state.letters, letter]\n        });\n    };\n\n    startLevelIfHaveAllLetters = () => {\n        if (this.state.letters.length + 1 >= MAX_LETTERS_LENGTH) {\n            this.props.startLevel();\n        }\n    };\n\n    getVowel = () => {\n        this.startLevelIfHaveAllLetters();\n        if (this.props.level.started) return false;\n        this.setLetterToState(letters.vowels);\n    };\n\n    getConsonant = () => {\n        this.startLevelIfHaveAllLetters();\n        if (this.props.level.started) return false;\n        this.setLetterToState(letters.consonants);\n    };\n\n    cellClick = value => {\n        this.setState({\n            currentValue: this.state.currentValue.concat(value)\n        }, () => this.props.setCardValue(this.state.currentValue));\n\n    };\n\n    popInputValue = () => {\n        const lastValue = this.state.currentValue[this.state.currentValue.length - 1];\n        const currentValue = [...this.state.currentValue];\n\n        currentValue.pop();\n\n        this.setState({\n            returnedValue: lastValue,\n            currentValue: currentValue.join('')\n        }, () => this.props.setCardValue(this.state.currentValue))\n    };\n\n    render() {\n        return (\n            <div className={style.card}>\n                <CellGroup\n                    values={this.state.letters}\n                    maxLength={MAX_LETTERS_LENGTH}\n                    cellClick={this.cellClick}\n                    returnedValue={this.state.returnedValue}\n                />\n\n                <CardInput backspaceClick={this.popInputValue} value={this.state.currentValue}/>\n\n                <Button.Group >\n                    <Button className={BaseStyle.responsiveFont}  disabled={this.props.level.started}\n                            onClick={this.getVowel}>Гласная</Button>\n                    <Button className={BaseStyle.responsiveFont} disabled={this.props.level.started}\n                            onClick={this.getConsonant}>Согласная</Button>\n                </Button.Group>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WordCard);\n","import React, { Component } from 'react';\n\nconst style = {\n    warning: {\n        fontSize: '2em',\n        color: '#9F6000',\n        padding: '0',\n        backgroundColor: '#FEEFB3'\n    }\n}\n\nclass Warning extends Component {\n    render() {\n        const padding = (this.props.message) ? '1em' : '0';\n\n        return (\n            <div style={{...style.warning, padding}}>\n                {this.props.message}\n            </div>\n        );\n    }\n}\n\nexport default Warning;\n","import React, { Component } from 'react';\nimport { Button } from \"semantic-ui-react\";\nimport BaseStyle from \"../../basic/Base.css\";\n\nconst ButtonWithValue = ({ value, buttonClick }) => {\n  return (\n    <Button  className={BaseStyle.responsiveFont} size='massive' onClick={() => buttonClick(value)}>{value}</Button>\n  );\n};\n\nclass ButtonGroup extends Component {\n\n    render() {\n        const buttons = this.props.buttons.map((b, i) => {\n            return  <ButtonWithValue key={i} value={b} buttonClick={this.props.buttonClick} />\n        });\n\n        return (\n            <div>\n                <Button.Group>\n                    { buttons }\n                </Button.Group>\n            </div>\n        );\n    }\n}\n\nexport default ButtonGroup;\n","import React, { Component } from 'react';\nimport { Button } from \"semantic-ui-react\";\nimport * as style from \"./Card.css\";\nimport CellGroup from \"../basic/CellGroup\";\nimport CardInput from \"./card-elements/CardInput\";\nimport BaseStyle from \"../basic/Base.css\";\nimport { setCardValue, startLevel, setCardTarget } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport ButtonGroup from \"./card-elements/ButtonGroup\";\nimport * as numbers from \"../../constants/numbers\";\nimport { signs } from \"../../constants/signs\";\nimport { contains, calculateTargetNumberValue } from \"../../helpers/helpers\";\n\nconst MAX_NUMBERS_LENGTH = 6;\n\nconst mapStateToProps = state => {\n    return { level: state.level, currentCard: state.currentCard };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        startLevel: () => dispatch(startLevel()),\n        setCardValue: value => dispatch(setCardValue(value)),\n        setCardTarget: target => dispatch(setCardTarget(target))\n    };\n};\n\nclass NumberCard extends Component {\n    state = {\n        target: '',\n        numbers: [],\n        currentValue: [],\n        returnedValue: ''\n    };\n\n    componentWillReceiveProps(nextProps, s) {\n        if (nextProps.level.number !== this.props.level.number) {\n            this.setState({\n                target: '',\n                numbers: [],\n                currentValue: [],\n                returnedValue: ''\n            })\n        }\n    }\n\n    setLetterToState = numbers => {\n        const randInd = Math.floor(Math.random() * numbers.length);\n        const number = numbers[randInd];\n        this.setState({\n            numbers: [...this.state.numbers, number]\n        },\n            () => {\n                if (this.props.level.started) {\n                    const target = calculateTargetNumberValue(this.state.numbers);\n                    this.props.setCardTarget(target);\n                    this.setState({ target });\n                }\n            }\n        );\n    };\n\n    startLevelIfHaveAllLetters = () => {\n        if (this.state.numbers.length + 1 >= MAX_NUMBERS_LENGTH) {\n            this.props.startLevel();\n        }\n    };\n\n    getSmall = () => {\n        this.startLevelIfHaveAllLetters();\n        if (this.props.level.started) return false;\n        this.setLetterToState(numbers.small);\n    };\n\n    getBig = () => {\n        this.startLevelIfHaveAllLetters();\n        if (this.props.level.started) return false;\n        this.setLetterToState(numbers.big);\n    };\n\n    cellClick = value => {\n        const lastValue = this.state.currentValue[this.state.currentValue.length - 1];\n\n        if (!lastValue && contains(signs, value)) return false;\n        if (lastValue && contains(signs, lastValue) && contains(signs, value)) return false;\n\n        this.setState({\n            currentValue: [...this.state.currentValue, value]\n        }, () => this.props.setCardValue(this.state.currentValue.join('')));\n\n    };\n\n\n    popInputValue = () => {\n        const currentValue = [...this.state.currentValue];\n        const lastValue = this.state.currentValue[this.state.currentValue.length - 1];\n\n        if (!lastValue) return false;\n\n        currentValue.pop();\n\n        this.setState({\n            returnedValue: contains(signs, lastValue) ? '' : lastValue,\n            currentValue\n        }, () => this.props.setCardValue(this.state.currentValue.join('')))\n    };\n\n    render() {\n        return (\n            <div className={style.card}>\n                <CellGroup\n                    values={this.state.numbers}\n                    maxLength={MAX_NUMBERS_LENGTH}\n                    cellClick={this.cellClick}\n                    returnedValue={this.state.returnedValue}\n                    inputLastValue={this.state.currentValue[this.state.currentValue.length - 1]}\n                />\n\n                <ButtonGroup buttons={signs} buttonClick={this.cellClick} />\n\n                <div>\n                    <span className={BaseStyle.responsiveFont}>{this.state.target}</span>\n                </div>\n\n                <CardInput backspaceClick={this.popInputValue} value={this.state.currentValue.join(' ')} />\n\n                <Button.Group >\n                    <Button className={BaseStyle.responsiveFont} disabled={this.props.level.started}\n                        onClick={this.getSmall}>Маленькое</Button>\n                    <Button className={BaseStyle.responsiveFont} disabled={this.props.level.started}\n                        onClick={this.getBig}>Большое</Button>\n                </Button.Group>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumberCard);\n","import React, { Component } from 'react';\n\nimport style from './Card.css';\nimport { connect } from \"react-redux\";\nimport TotalScore from \"../basic/TotalScore\";\n\nconst mapStateToProps = state => {\n    return { score: state.score };\n};\n\nclass GameOverCard extends Component {\n    render() {\n        const currentScore = this.props.score;\n        \n        return (\n            <div className={style.gameOverCard}>\n                <div>\n                    <span className={style.bigheader}>Вы набрали: {currentScore}</span>\n                </div>\n                <div>\n                    <span className={style.smallheader}>Ваш рекорд: <TotalScore/></span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(GameOverCard);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport style from './CardWrapper.css';\nimport baseStyle from './Base.css';\n\nimport Rate from './Rate';\nimport CardHeader from './CardHeader';\nimport Timer from './Timer';\nimport CancelButton from './CancelButton';\nimport DoneButton from './DoneButton';\nimport WordCard from '../cards/WordCard';\nimport Warning from './Warning';\nimport NumberCard from '../cards/NumberCard';\nimport * as cardNames from '../../constants/cardNames';\n\nimport * as actionCreators from '../../actions/index';\nimport {FINAL_LEVEL} from \"../../constants/common\";\nimport GameOverCard from \"../cards/GameOverCard\";\n\nconst mapStateToProps = state => {\n  return { level: state.level, warning: state.warning };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCardName: name => dispatch(actionCreators.setCardName(name))\n    }\n};\n\nconst mapCardNamesToComponents = {\n    WordCard: <WordCard/>,\n    NumberCard: <NumberCard/>,\n};\n\nclass CardWrapper extends Component {\n    resolveCard = () => {\n        const level = this.props.level.number;\n\n        if (level >= FINAL_LEVEL) {\n            return <GameOverCard/>\n        }\n\n        const cardName = (this.props.level.number % 2 === 0) ? cardNames.WORD_CARD : cardNames.NUMBER_CARD;\n        // const cardName = cardNames.WORD_CARD;\n        // const cardName = cardNames.NUMBER_CARD;\n        this.props.setCardName(cardName);\n        return mapCardNamesToComponents[cardName];\n    }\n\n    render() {\n        const currentCard = this.resolveCard();\n\n        return (\n            <div className={style.cardwrapper}>\n                <div className={baseStyle.borderBottom}>\n                    <Rate />\n                    <CardHeader />\n                    <div>\n                        <Timer />\n                    </div>\n                </div>\n                <Warning message={this.props.warning} />\n                { currentCard }\n                <div>\n                    <CancelButton />\n                    <DoneButton />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardWrapper);\n","import React, { Component } from 'react';\n\nimport CardWrapper from './CardWrapper';\n\n\nclass Game extends Component {\n    render() {\n        return (\n            <CardWrapper />\n        );\n    }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom'\n\nimport style from  './App.css';\n\nimport Menu from \"./components/basic/Menu\";\nimport Game from \"./components/basic/Game\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={style.App}>\n          <Switch>\n              <Route exact path='/' component={Menu} />\n              <Route exact path='/game' component={Game} />\n          </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport level from './level';\nimport currentCard from './currentCard';\nimport score from \"./score\";\nimport maxTime from \"./time\";\nimport warning from \"./warning\";\n\n\nexport default combineReducers({\n    level,\n    currentCard,\n    score,\n    maxTime,\n    warning\n});\n","import { LEVEL_UP, DROP_LEVEL, START_LEVEL, STOP_LEVEL } from \"../constants/actionTypes\";\n\nexport default function level(state = { number: 0, started: false }, action) {\n    // console.log(state);\n    switch (action.type) {\n        case LEVEL_UP:\n            return {...state, number: state.number + 1 };\n        case START_LEVEL:\n            return {...state, started: true };\n        case STOP_LEVEL:\n            return {...state, started: false };\n        case DROP_LEVEL:\n            return {...state, number: 0 };\n        default:\n            return state\n    }\n}","import { SET_CARD_VALUE, SET_CARD_NAME, CLEAR_CARD_VALUE, SET_TARGET } from \"../constants/actionTypes\";\n\nexport default function setValue(state = { name: '', value: '', target: '' }, action) {\n    switch (action.type) {\n        case SET_CARD_VALUE:\n            return { ...state, value: action.value };\n        case CLEAR_CARD_VALUE:\n            return { ...state, value: '' };\n        case SET_CARD_NAME:\n            return { ...state, name: action.name };\n        case SET_TARGET:\n            return { ...state, target: action.target };\n        default:\n            return state\n    }\n}","import { DROP_SCORE, UPDATE_SCORE } from \"../constants/actionTypes\";\n\nexport default function score(state = 0, action) {\n    switch (action.type) {\n        case UPDATE_SCORE:\n            return state + action.score;\n        case DROP_SCORE:\n            return 0;\n        default:\n            return state\n    }\n}","import {SET_MAX_TIME} from \"../constants/actionTypes\";\nimport {NORMAL_TIME} from \"../constants/maxTimes\";\n\nexport default function maxTime(state = NORMAL_TIME, action) {\n    switch (action.type) {\n        case SET_MAX_TIME:\n            return action.time;\n        default:\n            return state\n    }\n}","import {SET_WARNING} from \"../constants/actionTypes\";\n\nexport default function maxTime(state = '', action) {\n    switch (action.type) {\n        case SET_WARNING:\n            return action.warning;\n        default:\n            return state\n    }\n}","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(\n    rootReducer, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport './index.css';\nimport App from './App';\n\nimport store from \"./store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport Game from \"./components/basic/Game\";\n\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <BrowserRouter basename='/countdown'>\n//             <App />\n//         </BrowserRouter>\n//     </Provider>,\n//   document.getElementById('root'));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Game/>\n    </Provider>,\n    document.getElementById('root'));\n\n","import * as letters from '../constants/letters';\nimport * as numbers from '../constants/numbers';\nimport { signs } from '../constants/signs';\nimport { WORD_CARD, NUMBER_CARD } from \"../constants/cardNames\";\nimport { getYandexDicUrl } from \"./apiUrls\";\n\nconst POSITIVE = 'positive';\nconst NEGATIVE = 'negative';\n\nconst request = async url => {\n    const response = await fetch(url);\n    const json = await response.json();\n\n    return json;\n};\n\nexport const contains = (arr, val) => {\n    return (arr.indexOf(val) > -1);\n};\n\nexport const getCellState = value => {\n    if (contains(letters.vowels, value)) {\n        return POSITIVE;\n    } else if (contains(letters.consonants, value)) {\n        return NEGATIVE;\n    } else if (contains(numbers.small, value)) {\n        return NEGATIVE;\n    } else if (contains(numbers.big, value)) {\n        return POSITIVE;\n    }\n};\n\nexport const calculateScore = async ({ name, value, target }) => {\n    let score = { warning: '', value: 0 };\n\n    if (!value) return score;\n\n    switch (name) {\n        case WORD_CARD:\n            score = await calculateScoreForWord(value);\n            break;\n        case NUMBER_CARD:\n            score = calculateScoreForNumber(value, target);\n            break;\n        default:\n            break;\n    }\n\n    return score;\n};\n\nexport const calculateScoreForNumber = (expr, target) => {\n    const userValue = eval(expr);\n    const diff = Math.abs(target - userValue);\n\n    let value = 0;\n    let warning = '';\n\n    if (diff === 0) value = 10;\n    else if (diff > 0 && diff < 10) value = 5;\n    else if (diff > 10 && diff < 20) value = 2;\n    else {\n        value = 0;\n        warning = `Ваш результат ${userValue} слишком далек от цели ${target}`;\n    }\n    \n    return { value, warning };\n}\n\nexport const calculateScoreForWord = async word => {\n    const dicUrl = getYandexDicUrl(word);\n    const res = await request(dicUrl);\n\n    if (res && res.def && res.def.length > 0) {\n        return { warning: '', value: word.length };\n    }\n\n    return { warning: 'В нашем словаре нет такого слова :(', value: 0 };\n};\n\nexport const getRandomElementFromArray = arr => {\n    const randInd = Math.floor(Math.random() * arr.length);\n    return arr[randInd];\n}\n\nconst isValidTargetNumber = target => {\n    return target.indexOf('.') === -1 && target.indexOf('-') === -1 && target.length === 3;\n}\n\nexport const calculateTargetNumberValue = numbers => {\n    while (true) {\n        const expr = numbers.map((n, i) => {\n            const sign = getRandomElementFromArray(signs);\n\n            return (i < numbers.length - 1) ? n + sign : n;\n        });\n\n        const target = eval(expr.join('')).toString();\n        if (isValidTargetNumber(target)) return target;\n    }\n}","export const WORD_CARD = 'WordCard';\nexport const NUMBER_CARD = 'NumberCard';\n","export const big = ['100', '75', '50'];\nexport const small = ['1', '2', '3', '4', '5' ,'6' ,'7' ,'8' ,'9', '10'];\nexport const all = ['100', '75', '50', '1', '2', '3', '4', '5' ,'6' ,'7' ,'8' ,'9', '10'];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"oJ7qGPb1fLEaxrXnP2yuJ\",\"controls\":\"_1rdgeCWkPyAFTZnGAo4hbS\",\"button\":\"_1TF-VHFBUsnvpzzMPDLMKd\",\"buttonEasy\":\"_3dZfvr65izUc5md-53SRoS\",\"buttonNormal\":\"_3b1ZXcM6u4baC-JdMwtz3v\",\"buttonHard\":\"_2gtQsHnaSGz2o_Hwh4EeMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"_31wIJMU6DuwHxpviBbpyW2\",\"gameOverCard\":\"_1uk_qXaRL_wnGjo9KPqhtX\",\"bigheader\":\"_3j8cbrYgcwTug1J77fpOGb\",\"smallheader\":\"Em0p_g1l6tAx9K3qM3I_A\"};","export const vowels =     ['у', 'е', 'ы', 'а', 'о', 'я', 'и', 'ю'];\nexport const consonants = ['й', 'ц', 'к', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ф', 'в', 'п', 'р', 'л', 'д', 'ж', 'ч', 'с', 'м', 'т', 'ь', 'б'];\n","export const signs = ['+', '-', '*', '/'];","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardInput\":\"_1RnpPl4LcSY0ZmVJKFNjqy\",\"backspace\":\"_2uXlsU1oRWHTZftkjk-Rr5\",\"value\":\"_2WkBI8o5hcki8Rg6Ed_dKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"_1s6PCBba5GXKKKnliNU3Nd\",\"cellCover\":\"_3w7m_IWFoucSSH9C-ORL6E\"};"],"sourceRoot":""}