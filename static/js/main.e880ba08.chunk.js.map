{"version":3,"sources":["components/basic/Cell.css","App.css","components/basic/CardWrapper.css","helpers/apiUrls.js","components/basic/Base.css","helpers/helpers.js","components/basic/TotalScore.js","constants/actionTypes.js","actions/index.js","constants/maxTimes.js","components/basic/Menu.js","components/basic/Rate.js","constants/common.js","components/basic/CardHeader.js","components/basic/Timer.js","components/basic/CancelButton.js","components/basic/DoneButton.js","components/basic/Cell.js","components/basic/CellGroup.js","components/cards/card-elements/CardInput.js","components/cards/WordCard.js","components/basic/Warning.js","components/cards/card-elements/ButtonGroup.js","components/cards/NumberCard.js","components/cards/GameOverCard.js","components/basic/CardWrapper.js","components/basic/Game.js","App.js","reducers/index.js","reducers/level.js","reducers/currentCard.js","reducers/score.js","reducers/time.js","reducers/warning.js","store.js","index.js","constants/cardNames.js","constants/numbers.js","components/basic/Menu.css","components/cards/Card.css","constants/signs.js","constants/letters.js","components/cards/card-elements/CardInput.css"],"names":["module","exports","cell","cellCover","App","cardwrapper","__webpack_require__","d","__webpack_exports__","getYandexDicUrl","word","flex","nomargin","borderBottom","borderTop","responsiveFont","POSITIVE","NEGATIVE","request","_ref","Object","_Users_vlivanov_My_Projects_JS_Countdown_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_vlivanov_My_Projects_JS_Countdown_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","url","response","json","wrap","_context","prev","next","fetch","sent","abrupt","stop","this","_x","apply","arguments","contains","arr","val","indexOf","getCellState","value","letters","numbers","calculateScore","_ref3","_callee2","_ref2","name","target","score","_context2","warning","t0","WORD_CARD","NUMBER_CARD","calculateScoreForWord","calculateScoreForNumber","_x2","expr","userValue","eval","diff","Math","abs","concat","_ref4","_callee3","dicUrl","res","_context3","def","length","_x3","getRandomElementFromArray","floor","random","isValidTargetNumber","calculateTargetNumberValue","map","n","i","sign","signs","join","toString","TotalScore","state","currentScore","cashedTotalScore","JSON","parse","localStorage","getItem","props","setItem","setState","react_default","createElement","Component","connect","LEVEL_UP","DROP_LEVEL","SET_CARD_VALUE","CLEAR_CARD_VALUE","SET_CARD_NAME","START_LEVEL","STOP_LEVEL","UPDATE_SCORE","DROP_SCORE","SET_MAX_TIME","SET_WARNING","SET_TARGET","levelUp","type","setCardValue","clearCardValue","startLevel","stopLevel","updateScore","setWarning","EASY_TIME","NORMAL_TIME","HARD_TIME","Menu","easyClick","_this","setMaxTime","normalClick","hardClick","className","style","menu","controls","Button","Group","buttonEasy","button","onClick","buttonNormal","buttonHard","basic_TotalScore","dispatch","time","Rate","Header","size","FINAL_LEVEL","CardHeader","getDescription","level","number","cardNames","description","currentCard","Timer","timer","currentTime","maxTime","nextLevel","_this$props$currentCa","regenerator_default","setTimeout","alert","tick","levelStarted","setInterval","clearInterval","color","BaseStyle","Icon","started","CancelButton","cancelClick","dropLevel","dropScore","Link","to","animated","Content","visible","hidden","DoneButton","loading","doneButtonClick","card","console","log","isGameOver","disabled","Cell","handleClick","cellClick","index","opacity","backgroundColor","EMPTY_FILL","CellGroup","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","lastValue","inputLastValue","newGivenValues","toConsumableArray","givenValues","emptyValues","Array","maxLength","fill","nextProps","returnedValue","replace","split","values","_this2","_this$state","_this$props","sliceOfEmptyValues","slice","cells","components_basic_Cell","key","CardInput","cardInput","backspaceClick","backspace","MAX_LETTERS_LENGTH","WordCard","currentValue","setLetterToState","letter","startLevelIfHaveAllLetters","getVowel","getConsonant","popInputValue","pop","basic_CellGroup","cards_card_elements_CardInput","fontSize","padding","Warning","message","objectSpread","ButtonWithValue","buttonClick","ButtonGroup","buttons","b","ButtonGroup_ButtonWithValue","MAX_NUMBERS_LENGTH","NumberCard","setCardTarget","getSmall","getBig","s","card_elements_ButtonGroup","GameOverCard","gameOverCard","bigheader","smallheader","mapCardNamesToComponents","cards_WordCard","cards_NumberCard","CardWrapper","resolveCard","cards_GameOverCard","cardName","setCardName","baseStyle","basic_Rate","basic_CardHeader","basic_Timer","basic_Warning","basic_CancelButton","basic_DoneButton","actionCreators","Game","components_basic_CardWrapper","combineReducers","undefined","action","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_basic_Menu","document","getElementById","big","small","all","vowels","consonants"],"mappings":"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","file":"static/js/main.e880ba08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"_1s6PCBba5GXKKKnliNU3Nd\",\"cellCover\":\"_3w7m_IWFoucSSH9C-ORL6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_1o-FpbQrR11SDFN-G7O4U3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardwrapper\":\"_26nFhesm2IQk22bG-YXGb1\"};","export const getYandexDicUrl = word => {\n    return 'https://dictionary.yandex.net/' +\n    'api/v1/dicservice.json/' +\n    'lookup?key=dict.1.1.20181017T054446Z.8828bf2afad54623.4a6026cd581541a63e2fe5172389bf0da8ffab88&' +\n    'lang=ru-ru&' +\n    'text=' + word;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"PUafWHsfzIStJRj8xpx6H\",\"nomargin\":\"_4x4peJwBRGhlMqoJSmZek\",\"borderBottom\":\"_1-uDMLSrQVlWDSKenWM9Au\",\"borderTop\":\"_3C0Ed6PKPaSHBdPqj69dwi\",\"responsiveFont\":\"D4JuHztIhvsLlzmXLRQDA\"};","import * as letters from '../constants/letters';\nimport * as numbers from '../constants/numbers';\nimport { signs } from '../constants/signs';\nimport { WORD_CARD, NUMBER_CARD } from \"../constants/cardNames\";\nimport { getYandexDicUrl } from \"./apiUrls\";\n\nconst POSITIVE = 'positive';\nconst NEGATIVE = 'negative';\n\nconst request = async url => {\n    const response = await fetch(url);\n    const json = await response.json();\n\n    return json;\n};\n\nexport const contains = (arr, val) => {\n    return (arr.indexOf(val) > -1);\n};\n\nexport const getCellState = value => {\n    if (contains(letters.vowels, value)) {\n        return POSITIVE;\n    } else if (contains(letters.consonants, value)) {\n        return NEGATIVE;\n    } else if (contains(numbers.small, value)) {\n        return NEGATIVE;\n    } else if (contains(numbers.big, value)) {\n        return POSITIVE;\n    }\n};\n\nexport const calculateScore = async ({ name, value, target }) => {\n    let score = { warning: '', value: 0 };\n\n    if (!value) return score;\n\n    switch (name) {\n        case WORD_CARD:\n            score = await calculateScoreForWord(value);\n            break;\n        case NUMBER_CARD:\n            score = calculateScoreForNumber(value, target);\n            break;\n        default:\n            break;\n    }\n\n    return score;\n};\n\nexport const calculateScoreForNumber = (expr, target) => {\n    const userValue = eval(expr);\n    const diff = Math.abs(target - userValue);\n\n    let value = 0;\n    let warning = '';\n\n    if (diff === 0) value = 10;\n    else if (diff > 0 && diff < 10) value = 5;\n    else if (diff > 10 && diff < 20) value = 2;\n    else {\n        value = 0;\n        warning = `Ваш результат ${userValue} слишком далек от цели ${target}`;\n    }\n    \n    return { value, warning };\n}\n\nexport const calculateScoreForWord = async word => {\n    const dicUrl = getYandexDicUrl(word);\n    const res = await request(dicUrl);\n\n    if (res && res.def && res.def.length > 0) {\n        return { warning: '', value: word.length };\n    }\n\n    return { warning: 'В нашем словаре нет такого слова :(', value: 0 };\n};\n\nexport const getRandomElementFromArray = arr => {\n    const randInd = Math.floor(Math.random() * arr.length);\n    return arr[randInd];\n}\n\nconst isValidTargetNumber = target => {\n    return target.indexOf('.') === -1 && target.indexOf('-') === -1 && target.length === 3;\n}\n\nexport const calculateTargetNumberValue = numbers => {\n    while (true) {\n        const expr = numbers.map((n, i) => {\n            const sign = getRandomElementFromArray(signs);\n\n            return (i < numbers.length - 1) ? n + sign : n;\n        });\n\n        const target = eval(expr.join('')).toString();\n        if (isValidTargetNumber(target)) return target;\n    }\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n    return { score: state.score };\n}\n\nclass TotalScore extends Component {\n    state = {\n        currentScore: 0\n    }\n\n    componentDidMount() {\n        const cashedTotalScore = JSON.parse(localStorage.getItem('totalScore'));\n        \n        if (cashedTotalScore !== null) {\n            if (this.props.score > cashedTotalScore) {\n                localStorage.setItem('totalScore', this.props.score.toString());\n                this.setState({\n                    currentScore: this.props.score\n                });\n            } else {\n                this.setState({\n                    currentScore: cashedTotalScore\n                });\n            }\n        } else {\n            localStorage.setItem('totalScore', '0')\n        }\n    }\n\n    render() {\n        return (\n            <span>{this.state.currentScore}</span>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(TotalScore);\n","export const LEVEL_UP = \"LEVEL_UP\";\nexport const DROP_LEVEL = \"DROP_LEVEL\";\nexport const SET_CARD_VALUE = \"SET_CARD_VALUE\";\nexport const CLEAR_CARD_VALUE = \"CLEAR_CARD_VALUE\";\nexport const SET_CARD_NAME = \"SET_CARD_NAME\";\nexport const START_LEVEL = \"START_LEVEL\";\nexport const STOP_LEVEL = \"STOP_LEVEL\";\nexport const UPDATE_SCORE = \"UPDATE_SCORE\";\nexport const DROP_SCORE = \"DROP_SCORE\";\nexport const SET_MAX_TIME = \"SET_MAX_TIME\";\nexport const SET_WARNING = \"SET_WARNING\";\nexport const SET_TARGET = \"SET_TARGET\";\n\n\n\n\n\n","import {\n    LEVEL_UP,\n    SET_CARD_VALUE,\n    SET_CARD_NAME,\n    START_LEVEL,\n    UPDATE_SCORE,\n    STOP_LEVEL,\n    SET_MAX_TIME, DROP_LEVEL, DROP_SCORE, CLEAR_CARD_VALUE,\n    SET_TARGET,\n    SET_WARNING\n} from \"../constants/actionTypes\";\n\nexport const levelUp = () => ({ type: LEVEL_UP });\n\nexport const setCardValue = value => ({ type: SET_CARD_VALUE, value: value });\n\nexport const clearCardValue = () => ({ type: CLEAR_CARD_VALUE });\n\nexport const setCardName = name => ({ type: SET_CARD_NAME, name: name });\n\nexport const startLevel = () => ({ type: START_LEVEL });\n\nexport const stopLevel = () => ({ type: STOP_LEVEL });\n\nexport const updateScore = score => ({ type: UPDATE_SCORE, score: score });\n\nexport const setMaxTime = time => ({ type: SET_MAX_TIME, time: time });\n\nexport const dropLevel = () => ({ type: DROP_LEVEL });\n\nexport const dropScore = () => ({ type: DROP_SCORE });\n\nexport const setCardTarget = target => ({ type: SET_TARGET, target: target });\n\nexport const setWarning = warning => ({ type: SET_WARNING, warning: warning });\n\n\n\n\n\n","export const EASY_TIME = -1;\nexport const NORMAL_TIME = 60;\nexport const HARD_TIME = 30;","import React, { Component } from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n\nimport style from './Menu.css';\nimport TotalScore from './TotalScore';\nimport { setMaxTime } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { EASY_TIME, HARD_TIME, NORMAL_TIME } from \"../../constants/maxTimes\";\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMaxTime: time => dispatch(setMaxTime(time))\n    }\n};\n\nclass Menu extends Component {\n    easyClick = () => {\n        this.props.setMaxTime(EASY_TIME);\n    };\n\n    normalClick = () => {\n        this.props.setMaxTime(NORMAL_TIME);\n    };\n\n    hardClick = () => {\n        this.props.setMaxTime(HARD_TIME);\n    };\n\n    render() {\n        return (\n            <div className={style.menu}>\n                <h1>Обратный Отсчет</h1>\n                <div className={style.controls}>\n                    {/*<Link to='/game'><Icon name='play circle' size='massive'/></Link>*/}\n                    <Button.Group>\n                        <Button className={[style.buttonEasy, style.button]} onClick={this.easyClick}>Легко</Button>\n                        <Button className={[style.buttonNormal, style.button]}\n                                onClick={this.normalClick}>Нормально</Button>\n                        <Button className={[style.buttonHard, style.button]} onClick={this.hardClick}>Сложно</Button>\n                    </Button.Group>\n                </div>\n                <div>\n                    <span>Ваш рекорд:</span>\n                    <TotalScore/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Menu);\n","import React, { Component } from 'react';\nimport {Header} from \"semantic-ui-react\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return { score: state.score };\n};\n\nclass Rate extends Component {\n    render() {\n        return (\n            <div>\n                <Header size='medium'>{this.props.score}</Header>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(Rate);\n","export const FINAL_LEVEL = 10;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport {Header} from \"semantic-ui-react\";\nimport * as cardNames from '../../constants/cardNames'\nimport { FINAL_LEVEL } from \"../../constants/common\";\n\nconst mapStateToProps = state => {\n  return { name: state.currentCard.name, level: state.level };\n};\n\nclass CardHeader extends Component {\n    getDescription = () => {\n        if (this.props.level.number >= FINAL_LEVEL) return 'Всё!';\n\n        switch (this.props.name) {\n            case cardNames.WORD_CARD:\n                return 'Найди слово';\n            case cardNames.NUMBER_CARD:\n                return 'Найди число';\n            default:\n                return '';\n        }\n    }\n    render() {\n        const description = this.getDescription();\n\n        return (\n            <div>\n                <Header size='large'>{description}</Header>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, null)(CardHeader);\n","import React, { Component } from 'react';\nimport { Header, Icon } from \"semantic-ui-react\";\n\nimport BaseStyle from './Base.css';\nimport { connect } from \"react-redux\";\nimport { calculateScore } from \"../../helpers/helpers\";\nimport { levelUp, stopLevel, updateScore, clearCardValue, setWarning } from \"../../actions\";\n\nconst mapStateToProps = state => {\n    return {\n        maxTime: state.maxTime,\n        levelStarted: state.level.started,\n        currentCard: state.currentCard\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        levelUp: () => dispatch(levelUp()),\n        stopLevel: () => dispatch(stopLevel()),\n        updateScore: score => dispatch(updateScore(score)),\n        clearCardValue: () => dispatch(clearCardValue()),\n        setWarning: warning => dispatch(setWarning(warning))\n    };\n};\n\n\nclass Timer extends Component {\n    state = {\n        timer: null,\n        currentTime: this.props.maxTime\n    };\n\n    componentDidMount() {\n        let timer = setInterval(this.tick, 1000);\n        this.setState({ timer });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.timer);\n    }\n\n    nextLevel = async () => {\n        const { value, name } = this.props.currentCard;\n\n        try {\n            const score = await calculateScore(name, value);\n\n            this.props.setWarning(score.warning);\n            this.props.updateScore(score.value);\n            setTimeout(() => this.props.setWarning(''), 1000)\n            this.props.clearCardValue();\n            this.props.stopLevel();\n            this.props.levelUp();\n        } catch(e) {\n            alert('Check you internet connection');\n        }\n    };\n\n    tick = () => {\n        if (this.props.maxTime < 0) return false;\n\n        if (this.state.currentTime === 0) {\n            this.setState({\n                currentTime: this.props.maxTime\n            }, () => this.nextLevel());\n        }\n\n        if (!this.props.levelStarted) {\n            this.setState({\n                currentTime: this.props.maxTime\n            });\n        } else {\n            this.setState({\n                currentTime: this.state.currentTime - 1\n            });\n        }\n    }\n\n    render() {\n        const time = (this.props.maxTime < 0) ? '∞' : this.state.currentTime;\n        const color = (this.state.currentTime <= 5) ? 'red' : '';\n\n        return (\n            <div className={BaseStyle.flex}>\n                <Icon name='time'/>\n                <Header className={BaseStyle.nomargin} size='medium'>\n                    <span style={{color}}>{time}</span>\n                </Header>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n","import React, {Component} from 'react';\nimport {Button, Icon} from \"semantic-ui-react\";\nimport BaseStyle from \"./Base.css\";\nimport { Link } from \"react-router-dom\";\nimport { dropLevel, dropScore, stopLevel } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      dropLevel: () => dispatch(dropLevel()),\n      stopLevel: () => dispatch(stopLevel()),\n      dropScore: () => dispatch(dropScore())\n  }\n};\n\nclass CancelButton extends Component {\n    cancelClick = () => {\n        this.props.stopLevel();\n        this.props.dropLevel();\n        this.props.dropScore();\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to='/'>\n                    <Button onClick={this.cancelClick} animated color='red' size='massive' className={BaseStyle.responsiveFont}>\n                        <Button.Content visible>Ухожу</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name='arrow left'/>\n                        </Button.Content>\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CancelButton);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { Button, Icon } from \"semantic-ui-react\";\nimport BaseStyle from \"./Base.css\";\n\nimport { levelUp } from '../../actions/index';\nimport { calculateScore } from \"../../helpers/helpers\";\nimport { clearCardValue, stopLevel, updateScore, setWarning } from \"../../actions\";\nimport { FINAL_LEVEL } from \"../../constants/common\";\n\nconst mapStateToProps = state => {\n    return {\n        currentCard: state.currentCard,\n        score: state.score,\n        level: state.level\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        levelUp: () => dispatch(levelUp()),\n        stopLevel: () => dispatch(stopLevel()),\n        updateScore: score => dispatch(updateScore(score)),\n        clearCardValue: () => dispatch(clearCardValue()),\n        setWarning: warning => dispatch(setWarning(warning))\n    };\n};\n\nclass DoneButton extends Component {\n    state = {\n        loading: false\n    }\n\n    doneButtonClick = async () => {\n        const card = this.props.currentCard;\n\n        try {\n            await this.setState({ loading: true });\n\n            const score = await calculateScore(card);\n\n            await this.setState({ loading: false });\n\n            this.props.setWarning(score.warning);\n            this.props.updateScore(score.value);\n            setTimeout(() => this.props.setWarning(''), 2000)\n            this.props.clearCardValue();\n            this.props.stopLevel();\n            this.props.levelUp();\n        } catch(e) {\n            console.log(e)\n            alert('Check you internet connection');\n            await this.setState({ loading: false });\n        }\n    };\n\n    isGameOver = () => {\n        return this.props.level.number >= FINAL_LEVEL;\n    };\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.doneButtonClick} className={[BaseStyle.responsiveFont, BaseStyle.nomargin]}\n                    animated\n                    disabled={this.isGameOver() || this.state.loading}\n                    loading={this.state.loading}\n                    color='green'\n                    size='massive'>\n                    <Button.Content visible>Готово</Button.Content>\n                    <Button.Content hidden>\n                        <Icon name='arrow right' />\n                    </Button.Content>\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoneButton);\n","import React, { Component } from 'react';\nimport * as style from './Cell.css';\n\nconst getColor = state => {\n    if (state === 'positive') {\n        return 'palegreen';\n    } else if (state === 'negative') {\n        return 'salmon';\n    } else {\n        return 'whitesmoke'\n    }\n};\n\nconst getOpacity = hidden => {\n  return (hidden) ? '1' : '0.5';\n};\n\nclass Cell extends Component {\n    handleClick = () => {\n        this.props.cellClick(this.props.index, this.props.value);\n    };\n\n    render() {\n        const color = getColor(this.props.state);\n        const opacity = getOpacity(this.props.hidden);\n\n        return (\n            <div className={[style.cell]} onClick={this.handleClick}>\n                {this.props.value}\n                <div className={style.cellCover} style={{ backgroundColor: color, opacity}}></div>\n            </div>\n        );\n    }\n}\n\nexport default Cell;\n","import React, { Component } from 'react';\n\nimport Cell from './Cell';\nimport * as style from './Base.css';\nimport { getCellState, contains } from \"../../helpers/helpers\";\nimport { connect } from \"react-redux\";\nimport * as numbers from \"../../constants/numbers\";\n\nconst EMPTY_FILL = ' ';\n\n\nconst mapStateToProps = state => {\n    return { level: state.level };\n};\n\n\nclass CellGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        const emptyValues = Array(props.maxLength).fill(EMPTY_FILL);\n\n        this.state = {\n            emptyValues,\n            givenValues: []\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.returnedValue !== this.props.returnedValue) {\n            const returnedValue = nextProps.returnedValue;\n            if (returnedValue) {\n                let givenValues = [...this.state.givenValues];\n\n                givenValues = givenValues.join(',').replace(EMPTY_FILL, returnedValue).split(',');\n\n                this.setState({\n                    givenValues\n                });\n            }\n        }\n        if (nextProps.values !== this.props.values) {\n            this.setState({\n                givenValues: nextProps.values\n            });\n        }\n    }\n\n    cellClick = (index, value) => {\n        if (this.props.level.started) {\n            const lastValue = this.props.inputLastValue;\n            if (lastValue && contains(numbers.all, lastValue) && contains(numbers.all, value)) return false;\n\n            const newGivenValues = [...this.state.givenValues];\n            newGivenValues[index] = EMPTY_FILL;\n            this.setState({\n                givenValues: newGivenValues\n            });\n\n            this.props.cellClick(value);\n        }\n    };\n\n    render() {\n        const { emptyValues, givenValues } = this.state;\n        const { values, maxLength } = this.props;\n\n        const sliceOfEmptyValues = emptyValues.slice(values.length);\n        const updatedValues = givenValues.concat(sliceOfEmptyValues);\n\n        const limitedUpdatedValues = updatedValues.slice(0, maxLength);\n\n        const cells = limitedUpdatedValues.map((value, i) => {\n            return <Cell\n                index={i}\n                key={i}\n                hidden={!this.props.level.started}\n                state={getCellState(value)}\n                value={value}\n                cellClick={this.cellClick} />;\n        });\n\n        return (\n            <div className={style.flex}>\n                {cells}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(CellGroup);\n","import React, {Component} from 'react';\nimport style from './CardInput.css';\nimport {Icon} from \"semantic-ui-react\";\n\n\nclass CardInput extends Component {\n\n\n    render() {\n        return (\n            <div className={style.cardInput}>\n                <span className={style.value}>\n                    {this.props.value}\n                </span>\n                <Icon\n                    onClick={this.props.backspaceClick}\n                    className={style.backspace}\n                    name='long arrow alternate left'\n                    size='large'\n                    />\n            </div>\n        );\n    }\n}\n\nexport default CardInput;\n","import React, {Component} from 'react';\nimport {Button} from \"semantic-ui-react\";\nimport * as style from './Card.css';\nimport CellGroup from '../basic/CellGroup'\n\nimport * as letters from '../../constants/letters'\nimport {setCardValue, startLevel} from \"../../actions\";\nimport {connect} from \"react-redux\";\nimport CardInput from \"./card-elements/CardInput\";\nimport BaseStyle from \"../../components/basic/Base.css\";\n\n\nconst MAX_LETTERS_LENGTH = 9;\n\nconst mapStateToProps = state => {\n    return {level: state.level, currentCard: state.currentCard};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        startLevel: () => dispatch(startLevel()),\n        setCardValue: value => dispatch(setCardValue(value))\n    };\n};\n\nclass WordCard extends Component {\n    state = {\n        letters: [],\n        currentValue: '',\n        returnedValue: ''\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.level.number !== this.props.level.number) {\n            this.setState({\n                letters: [],\n                currentValue: '',\n                returnedValue: ''\n            })\n        }\n    }\n\n    setLetterToState = letters => {\n        const randInd = Math.floor(Math.random() * letters.length);\n        const letter = letters[randInd];\n        this.setState({\n            letters: [...this.state.letters, letter]\n        });\n    };\n\n    startLevelIfHaveAllLetters = () => {\n        if (this.state.letters.length + 1 >= MAX_LETTERS_LENGTH) {\n            this.props.startLevel();\n        }\n    };\n\n    getVowel = () => {\n        this.startLevelIfHaveAllLetters();\n        if (this.props.level.started) return false;\n        this.setLetterToState(letters.vowels);\n    };\n\n    getConsonant = () => {\n        this.startLevelIfHaveAllLetters();\n        if (this.props.level.started) return false;\n        this.setLetterToState(letters.consonants);\n    };\n\n    cellClick = value => {\n        this.setState({\n            currentValue: this.state.currentValue.concat(value)\n        }, () => this.props.setCardValue(this.state.currentValue));\n\n    };\n\n    popInputValue = () => {\n        const lastValue = this.state.currentValue[this.state.currentValue.length - 1];\n        const currentValue = [...this.state.currentValue];\n\n        currentValue.pop();\n\n        this.setState({\n            returnedValue: lastValue,\n            currentValue: currentValue.join('')\n        }, () => this.props.setCardValue(this.state.currentValue))\n    };\n\n    render() {\n        return (\n            <div className={style.card}>\n                <CellGroup\n                    values={this.state.letters}\n                    maxLength={MAX_LETTERS_LENGTH}\n                    cellClick={this.cellClick}\n                    returnedValue={this.state.returnedValue}\n                />\n\n                <CardInput backspaceClick={this.popInputValue} value={this.state.currentValue}/>\n\n                <Button.Group >\n                    <Button className={BaseStyle.responsiveFont}  disabled={this.props.level.started}\n                            onClick={this.getVowel}>Гласная</Button>\n                    <Button className={BaseStyle.responsiveFont} disabled={this.props.level.started}\n                            onClick={this.getConsonant}>Согласная</Button>\n                </Button.Group>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WordCard);\n","import React, { Component } from 'react';\n\nconst style = {\n    warning: {\n        fontSize: '2em',\n        color: '#9F6000',\n        padding: '0',\n        backgroundColor: '#FEEFB3'\n    }\n}\n\nclass Warning extends Component {\n    render() {\n        const padding = (this.props.message) ? '1em' : '0';\n\n        return (\n            <div style={{...style.warning, padding}}>\n                {this.props.message}\n            </div>\n        );\n    }\n}\n\nexport default Warning;\n","import React, { Component } from 'react';\nimport { Button } from \"semantic-ui-react\";\nimport BaseStyle from \"../../basic/Base.css\";\n\nconst ButtonWithValue = ({ value, buttonClick }) => {\n  return (\n    <Button  className={BaseStyle.responsiveFont} size='massive' onClick={() => buttonClick(value)}>{value}</Button>\n  );\n};\n\nclass ButtonGroup extends Component {\n\n    render() {\n        const buttons = this.props.buttons.map((b, i) => {\n            return  <ButtonWithValue key={i} value={b} buttonClick={this.props.buttonClick} />\n        });\n\n        return (\n            <div>\n                <Button.Group>\n                    { buttons }\n                </Button.Group>\n            </div>\n        );\n    }\n}\n\nexport default ButtonGroup;\n","import React, { Component } from 'react';\nimport { Button } from \"semantic-ui-react\";\nimport * as style from \"./Card.css\";\nimport CellGroup from \"../basic/CellGroup\";\nimport CardInput from \"./card-elements/CardInput\";\nimport BaseStyle from \"../basic/Base.css\";\nimport { setCardValue, startLevel, setCardTarget } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport ButtonGroup from \"./card-elements/ButtonGroup\";\nimport * as numbers from \"../../constants/numbers\";\nimport { signs } from \"../../constants/signs\";\nimport { contains, calculateTargetNumberValue } from \"../../helpers/helpers\";\n\nconst MAX_NUMBERS_LENGTH = 6;\n\nconst mapStateToProps = state => {\n    return { level: state.level, currentCard: state.currentCard };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        startLevel: () => dispatch(startLevel()),\n        setCardValue: value => dispatch(setCardValue(value)),\n        setCardTarget: target => dispatch(setCardTarget(target))\n    };\n};\n\nclass NumberCard extends Component {\n    state = {\n        target: '',\n        numbers: [],\n        currentValue: [],\n        returnedValue: ''\n    };\n\n    componentWillReceiveProps(nextProps, s) {\n        if (nextProps.level.number !== this.props.level.number) {\n            this.setState({\n                target: '',\n                numbers: [],\n                currentValue: [],\n                returnedValue: ''\n            })\n        }\n    }\n\n    setLetterToState = numbers => {\n        const randInd = Math.floor(Math.random() * numbers.length);\n        const number = numbers[randInd];\n        this.setState({\n            numbers: [...this.state.numbers, number]\n        },\n            () => {\n                if (this.props.level.started) {\n                    const target = calculateTargetNumberValue(this.state.numbers);\n                    this.props.setCardTarget(target);\n                    this.setState({ target });\n                }\n            }\n        );\n    };\n\n    startLevelIfHaveAllLetters = () => {\n        if (this.state.numbers.length + 1 >= MAX_NUMBERS_LENGTH) {\n            this.props.startLevel();\n        }\n    };\n\n    getSmall = () => {\n        this.startLevelIfHaveAllLetters();\n        if (this.props.level.started) return false;\n        this.setLetterToState(numbers.small);\n    };\n\n    getBig = () => {\n        this.startLevelIfHaveAllLetters();\n        if (this.props.level.started) return false;\n        this.setLetterToState(numbers.big);\n    };\n\n    cellClick = value => {\n        const lastValue = this.state.currentValue[this.state.currentValue.length - 1];\n\n        if (!lastValue && contains(signs, value)) return false;\n        if (lastValue && contains(signs, lastValue) && contains(signs, value)) return false;\n\n        this.setState({\n            currentValue: [...this.state.currentValue, value]\n        }, () => this.props.setCardValue(this.state.currentValue.join('')));\n\n    };\n\n\n    popInputValue = () => {\n        const currentValue = [...this.state.currentValue];\n        const lastValue = this.state.currentValue[this.state.currentValue.length - 1];\n\n        if (!lastValue) return false;\n\n        currentValue.pop();\n\n        this.setState({\n            returnedValue: contains(signs, lastValue) ? '' : lastValue,\n            currentValue\n        }, () => this.props.setCardValue(this.state.currentValue.join('')))\n    };\n\n    render() {\n        return (\n            <div className={style.card}>\n                <CellGroup\n                    values={this.state.numbers}\n                    maxLength={MAX_NUMBERS_LENGTH}\n                    cellClick={this.cellClick}\n                    returnedValue={this.state.returnedValue}\n                    inputLastValue={this.state.currentValue[this.state.currentValue.length - 1]}\n                />\n\n                <ButtonGroup buttons={signs} buttonClick={this.cellClick} />\n\n                <div>\n                    <span className={BaseStyle.responsiveFont}>{this.state.target}</span>\n                </div>\n\n                <CardInput backspaceClick={this.popInputValue} value={this.state.currentValue.join(' ')} />\n\n                <Button.Group >\n                    <Button className={BaseStyle.responsiveFont} disabled={this.props.level.started}\n                        onClick={this.getSmall}>Маленькое</Button>\n                    <Button className={BaseStyle.responsiveFont} disabled={this.props.level.started}\n                        onClick={this.getBig}>Большое</Button>\n                </Button.Group>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NumberCard);\n","import React, { Component } from 'react';\n\nimport style from './Card.css';\nimport { connect } from \"react-redux\";\nimport TotalScore from \"../basic/TotalScore\";\n\nconst mapStateToProps = state => {\n    return { score: state.score };\n};\n\nclass GameOverCard extends Component {\n    render() {\n        const currentScore = this.props.score;\n        \n        return (\n            <div className={style.gameOverCard}>\n                <div>\n                    <span className={style.bigheader}>Вы набрали: {currentScore}</span>\n                </div>\n                <div>\n                    <span className={style.smallheader}>Ваш рекорд: <TotalScore/></span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(GameOverCard);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport style from './CardWrapper.css';\nimport baseStyle from './Base.css';\n\nimport Rate from './Rate';\nimport CardHeader from './CardHeader';\nimport Timer from './Timer';\nimport CancelButton from './CancelButton';\nimport DoneButton from './DoneButton';\nimport WordCard from '../cards/WordCard';\nimport Warning from './Warning';\nimport NumberCard from '../cards/NumberCard';\nimport * as cardNames from '../../constants/cardNames';\n\nimport * as actionCreators from '../../actions/index';\nimport {FINAL_LEVEL} from \"../../constants/common\";\nimport GameOverCard from \"../cards/GameOverCard\";\n\nconst mapStateToProps = state => {\n  return { level: state.level, warning: state.warning };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCardName: name => dispatch(actionCreators.setCardName(name))\n    }\n};\n\nconst mapCardNamesToComponents = {\n    WordCard: <WordCard/>,\n    NumberCard: <NumberCard/>,\n};\n\nclass CardWrapper extends Component {\n    resolveCard = () => {\n        const level = this.props.level.number;\n\n        if (level >= FINAL_LEVEL) {\n            return <GameOverCard/>\n        }\n\n        const cardName = (this.props.level.number % 2 === 0) ? cardNames.WORD_CARD : cardNames.NUMBER_CARD;\n        // const cardName = cardNames.WORD_CARD;\n        // const cardName = cardNames.NUMBER_CARD;\n        this.props.setCardName(cardName);\n        return mapCardNamesToComponents[cardName];\n    }\n\n    render() {\n        const currentCard = this.resolveCard();\n\n        return (\n            <div className={style.cardwrapper}>\n                <div className={baseStyle.borderBottom}>\n                    <Rate />\n                    <CardHeader />\n                    <div>\n                        <Timer />\n                    </div>\n                </div>\n                <Warning message={this.props.warning} />\n                { currentCard }\n                <div>\n                    <CancelButton />\n                    <DoneButton />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardWrapper);\n","import React, { Component } from 'react';\n\nimport CardWrapper from './CardWrapper';\n\n\nclass Game extends Component {\n    render() {\n        return (\n            <CardWrapper />\n        );\n    }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom'\n\nimport style from  './App.css';\n\nimport Menu from \"./components/basic/Menu\";\nimport Game from \"./components/basic/Game\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={style.App}>\n          <Switch>\n              <Route exact path='/' component={Menu} />\n              <Route exact path='/game' component={Game} />\n          </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport level from './level';\nimport currentCard from './currentCard';\nimport score from \"./score\";\nimport maxTime from \"./time\";\nimport warning from \"./warning\";\n\n\nexport default combineReducers({\n    level,\n    currentCard,\n    score,\n    maxTime,\n    warning\n});\n","import { LEVEL_UP, DROP_LEVEL, START_LEVEL, STOP_LEVEL } from \"../constants/actionTypes\";\n\nexport default function level(state = { number: 0, started: false }, action) {\n    // console.log(state);\n    switch (action.type) {\n        case LEVEL_UP:\n            return {...state, number: state.number + 1 };\n        case START_LEVEL:\n            return {...state, started: true };\n        case STOP_LEVEL:\n            return {...state, started: false };\n        case DROP_LEVEL:\n            return {...state, number: 0 };\n        default:\n            return state\n    }\n}","import { SET_CARD_VALUE, SET_CARD_NAME, CLEAR_CARD_VALUE, SET_TARGET } from \"../constants/actionTypes\";\n\nexport default function setValue(state = { name: '', value: '', target: '' }, action) {\n    switch (action.type) {\n        case SET_CARD_VALUE:\n            return { ...state, value: action.value };\n        case CLEAR_CARD_VALUE:\n            return { ...state, value: '' };\n        case SET_CARD_NAME:\n            return { ...state, name: action.name };\n        case SET_TARGET:\n            return { ...state, target: action.target };\n        default:\n            return state\n    }\n}","import { DROP_SCORE, UPDATE_SCORE } from \"../constants/actionTypes\";\n\nexport default function score(state = 0, action) {\n    switch (action.type) {\n        case UPDATE_SCORE:\n            return state + action.score;\n        case DROP_SCORE:\n            return 0;\n        default:\n            return state\n    }\n}","import {SET_MAX_TIME} from \"../constants/actionTypes\";\nimport {NORMAL_TIME} from \"../constants/maxTimes\";\n\nexport default function maxTime(state = NORMAL_TIME, action) {\n    switch (action.type) {\n        case SET_MAX_TIME:\n            return action.time;\n        default:\n            return state\n    }\n}","import {SET_WARNING} from \"../constants/actionTypes\";\n\nexport default function maxTime(state = '', action) {\n    switch (action.type) {\n        case SET_WARNING:\n            return action.warning;\n        default:\n            return state\n    }\n}","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(\n    rootReducer, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport './index.css';\nimport App from './App';\n\nimport store from \"./store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport Game from \"./components/basic/Game\";\nimport Menu from \"./components/basic/Menu\";\n\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <BrowserRouter basename='/countdown'>\n//             <App />\n//         </BrowserRouter>\n//     </Provider>,\n//   document.getElementById('root'));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Menu/>\n    </Provider>,\n    document.getElementById('root'));\n\n","export const WORD_CARD = 'WordCard';\nexport const NUMBER_CARD = 'NumberCard';\n","export const big = ['100', '75', '50'];\nexport const small = ['1', '2', '3', '4', '5' ,'6' ,'7' ,'8' ,'9', '10'];\nexport const all = ['100', '75', '50', '1', '2', '3', '4', '5' ,'6' ,'7' ,'8' ,'9', '10'];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"oJ7qGPb1fLEaxrXnP2yuJ\",\"controls\":\"_1rdgeCWkPyAFTZnGAo4hbS\",\"button\":\"_1TF-VHFBUsnvpzzMPDLMKd\",\"buttonEasy\":\"_3dZfvr65izUc5md-53SRoS\",\"buttonNormal\":\"_3b1ZXcM6u4baC-JdMwtz3v\",\"buttonHard\":\"_2gtQsHnaSGz2o_Hwh4EeMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"_31wIJMU6DuwHxpviBbpyW2\",\"gameOverCard\":\"_1uk_qXaRL_wnGjo9KPqhtX\",\"bigheader\":\"_3j8cbrYgcwTug1J77fpOGb\",\"smallheader\":\"Em0p_g1l6tAx9K3qM3I_A\"};","export const signs = ['+', '-', '*', '/'];","export const vowels =     ['у', 'е', 'ы', 'а', 'о', 'я', 'и', 'ю'];\nexport const consonants = ['й', 'ц', 'к', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ф', 'в', 'п', 'р', 'л', 'д', 'ж', 'ч', 'с', 'м', 'т', 'ь', 'б'];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardInput\":\"_1RnpPl4LcSY0ZmVJKFNjqy\",\"backspace\":\"_2uXlsU1oRWHTZftkjk-Rr5\",\"value\":\"_2WkBI8o5hcki8Rg6Ed_dKb\"};"],"sourceRoot":""}